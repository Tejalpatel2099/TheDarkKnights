@page
@using RamenRatings.WebSite.Components
@model IndexModel

@{
    ViewData["Title"] = "Home page";
}

<!-- Search Bar -->
<form method="get" class="mb-4 d-flex" role="search">
    <input type="search"
           name="SearchString"
           value="@Model.CurrentFilter"
           class="form-control me-2"
           placeholder="Search by variety..."
           aria-label="Search" />
    <button class="btn btn-primary" type="submit">Search</button>
</form>

<!-- Page Stats -->
<div class="container text-center my-4">
    <div class="row justify-content-center">
        <!-- Brands -->
        <div class="col-md-4 mb-4 d-flex justify-content-center">
            <div class="ramen-rating-box flex-column text-center">
                <h2 class="stat-number" data-target="@Model.TotalBrands">0</h2>
                <h6 class="text-muted">Brands</h6>
            </div>
        </div>

        <!-- Products -->
        <div class="col-md-4 mb-4 d-flex justify-content-center">
            <div class="ramen-rating-box flex-column text-center">
                <h2 class="stat-number" data-target="@Model.TotalProducts">0</h2>
                <h6 class="text-muted">Products</h6>
            </div>
        </div>

        <!-- Ratings -->
        <div class="col-md-4 mb-4 d-flex justify-content-center">
            <div class="ramen-rating-box flex-column text-center">
                <h2 class="stat-number" data-target="@Model.TotalRatings">0</h2>
                <h6 class="text-muted">Total Ratings</h6>
            </div>
        </div>

		<!-- Average Rating -->
        <div class="col-md-12 mb-4 d-flex justify-content-center">
            <div class="ramen-rating-box p-4 rounded shadow text-center w-100" style="background: #fffbe6; border: 1px solid #ffe58f;">
                <h5 class="mb-3 fw-bold text-dark">🍜 Top Rated Ramen(s)</h5>
                <div class="d-flex flex-wrap justify-content-center">
                    @foreach (var name in @Model.HighestRatedRamen.Split(","))
                    {
                        <span class="badge rounded-pill bg-warning text-dark m-1 px-3 py-2">@name.Trim()</span>
                    }
                </div>
            </div>
        </div>


    </div>
</div>

<!-- Product Cards -->
@(await Html.RenderComponentAsync<ProductList>(
    RenderMode.ServerPrerendered,
    new { SearchString = Model.CurrentFilter }))


<!-- Script -->
@section Scripts 
{
    <script>
        // On page load, show the stat number via animate number
        document.addEventListener("DOMContentLoaded", function () 
        {
            const counters = document.querySelectorAll(".stat-number");

            // Update the count for each number via incremented animation
            counters.forEach(counter => 
            {
                const updateCount = () => 
                {
                    const target = +counter.getAttribute("data-target");
                    const current = +counter.innerText;
                    const increment = Math.ceil(target / 40);

                    if (current < target) 
                    {
                        counter.innerText = current + increment;
                        setTimeout(updateCount, 30);
                    } else 
                    {
                        counter.innerText = target.toLocaleString();
                    }
                };

                updateCount();
            });
        });
    </script>
}
