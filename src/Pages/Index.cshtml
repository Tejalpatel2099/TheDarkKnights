@page
@using RamenRatings.WebSite.Components
@model IndexModel

@{
    ViewData["Title"] = "Home page";
}

<!-- Search Section -->
<div class="search-banner py-5 text-center text-white my-3" style="background: linear-gradient(135deg, #ff9800, #ff5722);">
    <div class="container">
        <h1 class="display-4 fw-bold">Explore the Ramentastic World</h1>
        <p class="lead">Discover, rate, and compare your favorite ramen</p>

        <!-- Search -->
        <form method="get" class="d-flex justify-content-center mt-4" role="search">
            <input type="search"
                   name="SearchString"
                   value="@Model.CurrentFilter"
                   class="form-control w-50 me-2"
                   placeholder="Search by variety..."
                   aria-label="Search" />
            <button class="btn" style="background: linear-gradient(135deg, #ff9800, #ffff);" type="submit">Search</button>
        </form>
    </div>
</div>

<!-- Page Stats -->
<div class="container text-center my-5">
    <div class="row justify-content-center">
        <!-- Brands -->
        <div class="col-md-3 mb-4">
            <div class="stat-card shadow-sm rounded py-4 bg-light">
                <h2 class="stat-number text-primary" data-target="@Model.TotalBrands">0</h2>
                <p class="text-muted mb-0">Brands</p>
            </div>
        </div>

        <!-- Products -->
        <div class="col-md-3 mb-4">
            <div class="stat-card shadow-sm rounded py-4 bg-light">
                <h2 class="stat-number text-success" data-target="@Model.TotalProducts">0</h2>
                <p class="text-muted mb-0">Products</p>
            </div>
        </div>

        <!-- Ratings -->
        <div class="col-md-3 mb-4">
            <div class="stat-card shadow-sm rounded py-4 bg-light">
                <h2 class="stat-number text-danger" data-target="@Model.TotalRatings">0</h2>
                <p class="text-muted mb-0">Total Ratings</p>
            </div>
        </div>
    </div>

    <!-- Top Rated Section with Horizontal Scroll -->
    <div class="row">
        <div class="col-md-12">
            <div class="p-4 rounded shadow-sm bg-warning-subtle border border-warning text-dark position-relative">
                <h5 class="fw-bold mb-3">🍜 Top Rated Ramen(s)</h5>

                <!-- Left Arrow -->
                <button class="scroll-btn left" onclick="scrollBadges(-200)">&#10094;</button>

                <!-- Scrollable Badge Container -->
                <div class="scroll-container d-flex overflow-auto px-2" id="badgeScroll">
                    @foreach (var name in @Model.HighestRatedRamen.Split(","))
                    {
                        <span class="badge rounded-pill bg-warning text-dark fw-semibold m-1 px-3 py-2 badge-hover">@name.Trim()</span>
                    }
                </div>

                <!-- Right Arrow -->
                <button class="scroll-btn right" onclick="scrollBadges(200)">&#10095;</button>
            </div>
        </div>
    </div>
</div>

<!-- Product Cards -->
@(await Html.RenderComponentAsync<ProductList>(
    RenderMode.ServerPrerendered,
    new { SearchString = Model.CurrentFilter }))

<!-- Script -->
@section Scripts {
    <script>
        // Animated Counter for page stats
        document.addEventListener("DOMContentLoaded", function () {
            const counters = document.querySelectorAll(".stat-number");

			// arguments for each counter
            counters.forEach(counter => {
                const updateCount = () => {
                    const target = +counter.getAttribute("data-target");
                    const current = +counter.innerText;
                    const increment = Math.ceil(target / 40);
                    if (current < target) {
                        counter.innerText = current + increment;
                        setTimeout(updateCount, 30);
                    } else {
                        counter.innerText = target.toLocaleString();
                    }
                };
                updateCount();
            });
        });

        // Badge Scroll Function
        function scrollBadges(distance) {
            const container = document.getElementById('badgeScroll');
            container.scrollBy({ left: distance, behavior: 'smooth' });
        }
    </script>
}
