@page "{number}"
@model RamenRatings.WebSite.Pages.ReadModel

<div class="container mt-4">
    <h2 class="animated-heading text-center mb-4">Information about @Model.Product.Variety</h2>

    <div class="card p-4 shadow-lg bg-light">
        <div class="row">
            <!-- Image Section -->
            <div class="col-md-5 text-center">
                <img src="@Model.Product.img?ts=@DateTime.Now.Ticks" alt="@Model.Product.Variety" class="img-fluid rounded" />
            </div>

            <!-- Detail Section -->
            <div class="col-md-7">
                <!--Display product details-->
                <h3 class="variety-title">@Model.Product.Variety</h3>
                <p><strong>Brand:</strong> @Model.Product.Brand</p>
                <p><strong>Style:</strong> @Model.Product.Style</p>
                <p><strong>Country:</strong> @Model.Product.Country</p>
                <p><strong>Vegetarian:</strong> @Model.Product.Vegetarian</p>

                <!-- Feedbacks Display -->
                @if ((Model.Product.Feedback == null) == false && Model.Product.Feedback.Any())
                {
                    <div class="mt-3">
                        <h5>What users are saying about this ramen:</h5>
                        <ul class="list-group">
                            @foreach (var feedback in Model.Product.Feedback)
                            {
                                <li class="list-group-item"> => @feedback</li>
                            }
                        </ul>
                    </div>
                }


                <!-- Outputs ratings as average of ratings array -->
                <p>
                    <strong>Average Rating:</strong>
                    @{
                        // Get the current ratings
                        var ratings = Model.Product.Ratings;
                        if ((ratings == null) == false && ratings.Length > 0)
                        {
                            // Compute the average rating
                            double avg = ratings.Average();

                            // Calculate number of full stars
                            int fullStars = (int)Math.Floor(avg);

                            // Determine if a half star is needed
                            bool hasHalfStar = (avg - fullStars) >= 0.5;

                            // Calculate remaining empty stars
                            int emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);

                            // Render star icons based on rating
                            <span>
                                @for (int i = 0; i < fullStars; i++)
                                {
                                    <i class="fas fa-star text-warning"></i>
                                }
                                @if (hasHalfStar)
                                {
                                    <i class="fas fa-star-half-alt text-warning"></i>
                                }
                                @for (int i = 0; i < emptyStars; i++)
                                {
                                    <i class="far fa-star text-warning"></i>
                                }
                                @* Display numeric average *@
                                <span class="ml-2">(@($"{avg:F1}") / 5)</span>
                            </span>
                        }
                        else
                        {
                            @("No ratings yet")
                        }
                    }
                </p>


                <!-- Action Buttons -->
                <div class="mt-3">
                    <!--Link to update page and a button to go back-->
                    <a class="btn btn-primary rounded-pill text-white" href="/Product/Update/@Model.Product.Number">✏️ Update Product</a>
                    <button type="button" class="btn btn-secondary" onclick="goBack()">Go Back</button>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Required Bootstrap JS (only if not already included in layout) -->
@section Scripts {
    <script>
        // Go back to previous page
        function goBack() {
            window.history.back();
        }
    </script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
}